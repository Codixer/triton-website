// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home/FAQ/Question Component matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Question
    title="This is a test title!"
  >
    This is a test answer!
  </Question>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <Elevation
        z={8}
      >
        <div>
          <Icon
            icon="comment-question.svg"
          />
          <OpenSansTypography
            use="headline6"
          >
            This is a test title!
          </OpenSansTypography>
        </div>
        <br />
        <Typography
          use="body1"
        >
          This is a test answer!
        </Typography>
      </Elevation>,
      "span": "4",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div>
            <Icon
              icon="comment-question.svg"
            />
            <OpenSansTypography
              use="headline6"
            >
              This is a test title!
            </OpenSansTypography>
          </div>,
          <br />,
          <Typography
            use="body1"
          >
            This is a test answer!
          </Typography>,
        ],
        "className": undefined,
        "z": 8,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Icon
                icon="comment-question.svg"
              />,
              <OpenSansTypography
                use="headline6"
              >
                This is a test title!
              </OpenSansTypography>,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "icon": "comment-question.svg",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "This is a test title!",
                "use": "headline6",
              },
              "ref": null,
              "rendered": "This is a test title!",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "This is a test answer!",
            "use": "body1",
          },
          "ref": null,
          "rendered": "This is a test answer!",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Elevation
          z={8}
        >
          <div>
            <Icon
              icon="comment-question.svg"
            />
            <OpenSansTypography
              use="headline6"
            >
              This is a test title!
            </OpenSansTypography>
          </div>
          <br />
          <Typography
            use="body1"
          >
            This is a test answer!
          </Typography>
        </Elevation>,
        "span": "4",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <div>
              <Icon
                icon="comment-question.svg"
              />
              <OpenSansTypography
                use="headline6"
              >
                This is a test title!
              </OpenSansTypography>
            </div>,
            <br />,
            <Typography
              use="body1"
            >
              This is a test answer!
            </Typography>,
          ],
          "className": undefined,
          "z": 8,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Icon
                  icon="comment-question.svg"
                />,
                <OpenSansTypography
                  use="headline6"
                >
                  This is a test title!
                </OpenSansTypography>,
              ],
              "className": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "icon": "comment-question.svg",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "This is a test title!",
                  "use": "headline6",
                },
                "ref": null,
                "rendered": "This is a test title!",
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "This is a test answer!",
              "use": "body1",
            },
            "ref": null,
            "rendered": "This is a test answer!",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
